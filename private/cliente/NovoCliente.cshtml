@{
    Layout = "~/private/layout/_LayoutPadrao.cshtml";
    Page.Title = "Novo Cliente";        

    if(!WebSecurity.IsAuthenticated) {
        Response.Redirect("~/");
    }

    if(IsPost) {
        var nome = Request["nome"].ToString().Trim().ToUpper();
        var cpf =  Request["cpf"].ToString();
        var dtnasc = Request["dtnasc"].AsDateTime();
        var email = Request["email"].ToString().Trim().ToLower();
        var endereco = Request["endereco"].ToString().Trim().ToUpper();
        var bairro = Request["bairro"].ToString().Trim().ToUpper();
        var cidade = Request["cidade"].ToString().Trim().ToUpper();
        var uf = Request["uf"].ToString().Trim().ToUpper();
                
        /* Validando campos */
        if(nome.IsEmpty()) {
            ModelState.AddError("error", "O campo Nome é obrigatório.");            
        }

        if(cpf.IsEmpty()) {
            ModelState.AddError("error", "O campo CPF é obrigatório.");            
        } else {
            var status = true;
           
            for(int i = 0; i < cpf.Count(); i++) {
                if(!"0123456789".Contains(cpf.ElementAt(i))) {
                    status = false;
                    break;
                }
            }

            if(!status) {
                ModelState.AddError("error", "O campo CPF deve conter apenas numeros.");
            }
        }
        
        if(dtnasc.Equals(null)) {
            ModelState.AddError("error", "O campo Dt. Nascimento é obrigatório.");
        } 

        if(email.IsEmpty()) {
            ModelState.AddError("error", "O campo E-mail é obrigatório.");            
        } else if(!email.Contains(".") || !email.Contains("@") ) {
            ModelState.AddError("error", "E-mail inválido.");            
        }

        if(endereco.IsEmpty()) {
            ModelState.AddError("error", "O campo Endereço é obrigatório.");
        }

        if(bairro.IsEmpty()) {
            ModelState.AddError("error", "O campo Bairro é obrigatório.");
        }

        if(cidade.IsEmpty()) {
            ModelState.AddError("error", "O campo Cidade é obrigatório.");
        }

        if(uf.IsEmpty()) {
            ModelState.AddError("error", "O campo UF é obrigatório.");
        }


        /* Inserindo Novo Usuario */
        if(ModelState.IsValid) {
            var db = Database.Open("biblioteca");
            var query = "INSERT INTO cliente(nome, cpf, dtnasc, email, endereco, bairro, cidade, uf) VALUES (@0, @1, @2, @3, @4, @5, @6, @7)";

            if(db.Execute(query, nome, cpf, dtnasc, email, endereco, bairro, cidade, uf) == 1) {
                ModelState.AddError("sucess", "Registro inserido com sucesso.");
            }
        }
    }
}

<div id="novo-cliente" class="page-content">
    <h1 class="page-title">@Page.Title</h1>

    <form action="#" method="post">
        <fieldset style="border: 1px #fff solsid; box-shadow: 0 0 5px #322a2a; width: 370px;">
            <legend style="font-family: Verdana, Arial, serif; font-weight: bold;">Dados do Cliente</legend>

                <div style="color: #f00">
                    @Html.ValidationMessage("error")
                </div>

                <table>
                    <tr>
                        <td><label for="nome" class="rotulo">Nome:</label></td>
                        <td><input type="text" name="nome" class="campo" maxlength="50" required /></td>
                    </tr>

                    <tr>
                        <td><label for="cpf" class="rotulo">CPF:</label></td>
                        <td><input type="number" name="cpf" class="campo" maxlength="11" required /></td>
                    </tr>

                    <tr>
                        <td><label for="dtnasc" class="rotulo">Dt. Nascimento:</label></td>
                        <td><input type="date" name="dtnasc" class="campo" required /></td>
                    </tr>

                    <tr>
                        <td><label for="email" class="rotulo">E-mail:</label></td>
                        <td><input type="email" name="email" class="campo" maxlength="50" required /></td>
                    </tr>

                    <tr>
                        <td><label for="endereco" class="rotulo">Endereço:</label></td>
                        <td><input type="text" name="endereco" class="campo" maxlength="100" /></td>
                    </tr>

                    <tr>
                        <td><label for="bairro" class="rotulo">Bairro:</label></td>
                        <td><input type="text" name="bairro" class="campo" maxlength="50" required /></td>
                    </tr>

                    <tr>
                        <td><label for="cidade" class="rotulo">Cidade:</label></td>
                        <td><input type="text" name="cidade" class="campo" maxlength="50" required /></td>
                    </tr>

                    <tr>
                        <td><label for="uf" class="rotulo">UF:</label></td>
                        <td><input type="text" name="uf" class="campo" maxlength="2" required /></td>
                    </tr>

                    <tr>
                        <td colspan="2">
                            <input type="reset" value="Limpar" name="bntLimpar" class="botao" />
                            <input type="submit" value="Salvar" name="bntSalvar" class="botao" />
                        </td>
                    </tr>

                </table>
        </fieldset>
    </form>

    <div style="color: #0026ff; font-size: 20px; font-family: Verdana, Arial, serif; margin: 30px 0 0 40px;">
            @Html.ValidationMessage("sucess")
    </div>
</div>
