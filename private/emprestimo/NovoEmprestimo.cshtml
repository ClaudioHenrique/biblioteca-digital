@{
    Layout = "~/private/layout/_LayoutPadrao.cshtml";
    Page.Title = "Novo Emprestimo";        

    if(!WebSecurity.IsAuthenticated) {
        Response.Redirect("~/");
    }

    var numExemplar = UrlData[0].AsInt();
    if(numExemplar == null) {
        Response.Redirect("~/private/acervo/Acervo.cshtml");
    }
    
    var query = "SELECT * FROM emprestimo WHERE numExemplar = @0";
    var db = Database.Open("biblioteca");
    var emprestimo = db.QuerySingle(query, numExemplar);

    if(emprestimo != null) {
        var msgError = "Atenção! Este exemplar já esta empretado. "+
                       "A devolução está prevista para o dia "+emprestimo.dtEntrega+".";
        Session.Add("msgError", msgError);
        Response.Redirect("~/private/error/ErrorPage.cshtml");
    }
        
    query = "SELECT livro.titulo FROM acervo "+
                "INNER JOIN livro ON acervo.idLivro = livro.idLivro "+
                "WHERE acervo.numExemplar = @0";
    db = Database.Open("biblioteca");
    var tituloExemplar = db.QuerySingle(query, numExemplar).titulo;    

    var dtEmprestimo = DateTime.Now.Date;
    var dtEntrega = dtEmprestimo.AddDays(2);

    if(IsPost) {  
        var idCliente = Request["idCliente"].AsInt();
                
        /* Validando campos */
        if(idCliente == null) {
            ModelState.AddError("error", "O campo Cod. Cliente é obrigatório.");            
        } else {
            db = Database.Open("biblioteca");
            query = "SELECT * FROM cliente WHERE cliente.idCliente = @0";
            var cliente = db.QuerySingle(query, idCliente);

            if(cliente == null) {
                ModelState.AddError("error", "O código do cliente informado não é válido.");            
            }  
        }

        query = "SELECT * FROM reserva WHERE numExemplar = @0 AND dtreserva = @1";
        db = Database.Open("biblioteca");
        var reservas = db.Query(query, numExemplar, DateTime.Now.Date);
            
        if(reservas.Count() > 0) {
            var status = false;
            foreach(var r in reservas) {
                if(r.idCliente == idCliente) {
                    status = true;
                    break;
                }
            }

            if(!status) {
                var msgError = "Atenção! Não é possível realizar o emprestimo. "+
                               "Este exemplar já está reservado para outro cliente na data atual.";
                Session.Add("msgError", msgError);
                Response.Redirect("~/private/error/ErrorPage.cshtml");
            } else {
                query = "DELETE FROM reserva WHERE numExemplar = @0 AND idCliente = @1 AND dtReserva = @2";
                db = Database.Open("biblioteca");
                db.Execute(query, numExemplar, idCliente, dtEmprestimo);
            }
        }

        /* Inserindo Novo Emprestimo */
        if(ModelState.IsValid) {
            db = Database.Open("biblioteca");
            query = "INSERT INTO emprestimo (numExemplar, idCliente, dtEmprestimo, dtEntrega) VALUES (@0, @1, @2, @3)";

            if(db.Execute(query, numExemplar, idCliente, dtEmprestimo.Date, dtEntrega.Date) == 1) {
                ModelState.AddError("sucess", "Registro inserido com sucesso.");
            }
        }    
    }
    
}

<div id="novo-emprestimo" class="page-content">
    <h1 class="page-title">@Page.Title</h1>

    <form action="#" method="post">
        <fieldset style="border: 1px #fff solsid; box-shadow: 0 0 5px #322a2a; width: 400px;">
            <legend style="font-family: Verdana, Arial, serif; font-weight: bold;">Dados do Emprestimo</legend>

                <div style="color: #f00">
                    @Html.ValidationMessage("error")
                </div>

                <table>
                    <tr>
                        <td><label for="numExemplar" class="rotulo">Nº Exemplar:</label></td>
                        <td><input type="number" name="numExemplar" class="campo" disabled value="@numExemplar" /></td>
                    </tr>

                    <tr>
                        <td><label for="tituloExemplar" class="rotulo">Título do Exemplar:</label></td>
                        <td><input type="text" name="tituloExemplar" class="campo" disabled value="@tituloExemplar" /></td>
                    </tr>

                    <tr>
                        <td><label for="idCliente" class="rotulo">Cod. Cliente:</label></td>
                        <td><input type="number" name="idCliente" class="campo" required autofocus="true" /></td>
                    </tr>

                    <tr>
                        <td><label for="dtEmprestimo" class="rotulo">Dt. Emprestimo:</label></td>
                        <td><input type="text" name="dtEmprestimo" class="campo" required disabled value="@dtEmprestimo.Date" /></td>
                    </tr>

                    <tr>
                        <td><label for="dtEntrega" class="rotulo">Dt. Entrega:</label></td>
                        <td><input type="text" name="dtEntrega" class="campo" required disabled value="@dtEntrega.Date" /></td>
                    </tr>

                    <tr>
                        <td colspan="2">
                            <input type="reset" value="Limpar" name="bntLimpar" class="botao" />
                            <input type="submit" value="Salvar" name="bntSalvar" class="botao" />
                        </td>
                    </tr>

                </table>
        </fieldset>
    </form>

    <div style="color: #0026ff; font-size: 20px; font-family: Verdana, Arial, serif; margin: 30px 0 0 40px;">
            @Html.ValidationMessage("sucess")
    </div>
</div>
